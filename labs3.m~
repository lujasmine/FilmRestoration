function output = labs3(path, prefix, first, last, digits, suffix)

% labs3('footage', 'footage_', 1, 657, 3, 'png')
image_data = load_sequence(path, prefix, first, last, digits, suffix);
image_data = im2double(image_data);

% detectSceneCuts(image_data); % part i

corrected_data = flickerCorrection(image_data, 1, 256); % part ii
% corrected_data = flickerCorrection(corrected_data, 257, 496);
% corrected_data = flickerCorrection(corrected_data, 497, 657);

imhist(corrected)

% corrected_data = verticalArtefacts(image_data, 497, 657); % part iv

plot(1:476, image_data(200,:,500), 1:476, corrected_data(200,:,500));

% corrected_data = cameraShake(image_data); % part v

implay([image_data, corrected_data]);

end

% Part i). Detection of Scene Cuts
function detectSceneCuts(image_data)
    n = 1;
    
    for i=1:size(image_data,3)-1
        curr = image_data(:,:,i);
        next = image_data(:,:,i+1);
        sqr_err = immse(curr, next);
        
        if (sqr_err > 0.1)
            % add text here
            fprintf("Image %i: %d \n", n, sqr_err);
        end
        n = n + 1;
    end
end

% TODO try with pixels AFTER doing everything else
function corrected = flickerCorrection(imgs, start_frame, end_frame)
    corrected = imgs;
    n_frames = 10;
    
    for img_num = start_frame:end_frame
        
        avg_start = img_num;
        avg_end = img_num;
        
        if ((img_num - n_frames) > start_frame)
            avg_start = img_num - n_frames;
        end
        
        if ((img_num + n_frames) < end_frame)
            avg_end = img_num + n_frames;
        end
        
        frames_sum = sum(corrected(:,:,avg_start:avg_end),3);
        frames_avg = frames_sum / (avg_end - avg_start + 1);
        corrected(:,:,img_num) = histeq(corrected(:,:,img_num), imhist(frames_avg)); 
    end
    
end

function corrected = verticalArtefacts(imgs, start_frame, end_frame)
    corrected = imgs;
    for img = start_frame: end_frame
        for r = 1 : size(imgs,1)
          % TODO experiment with different values for dimension of the
          % median filter
          corrected(r,:,img) = medfilt1(corrected(r,:,img),4);
        end
    end
end